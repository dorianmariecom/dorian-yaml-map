#!/usr/bin/env ruby
# frozen_string_literal: true

require "dorian/arguments"
require "yaml"

parsed = Dorian::Arguments.parse(version: { alias: :v }, help: { alias: :h })

abort parsed.help if parsed.options.help

if parsed.options.version
  abort File.read(File.expand_path("../VERSION", __dir__))
end

inputs = parsed.files.map { |file| File.read(file) }
inputs = [$stdin.each_line.to_a.join] if inputs.empty?

inputs.each do |input|
  json = YAML.safe_load(input)

  if json.is_a?(Hash)
    result =
      json.to_h do |key, value|
        it = [key.dup, value.dup]
        eval(parsed.arguments.join(" "))
        it
      end
  elsif json.is_a?(Array)
    result =
      json.map do |it|
        it = it.dup
        eval(parsed.arguments.join(" "))
        it
      end
  else
    it = json.dup
    eval(parsed.arguments.join(" "))
    result = it
  end

  puts result.to_yaml
end
